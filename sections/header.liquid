<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}


<style>
  header .h-wishlist-icon{
    scale: .55;
    margin-right: -5px;
  }
  .h-wishlist-icon .wishlist-h-count{
    font-size: 1.3rem;
    display: flex;
    bottom: 0.3rem;
    right: 0;
    background: #612342 !important;
    top: unset !important;
    padding: 12px;
    line-height: 4px;
    letter-spacing: 0;
    border: solid #fff 1px;
  }
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0;
      padding-top: 0.5rem;
    }
  }
</style>

{%- style -%}
  .header {
  <<<<<<< HEAD
      padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 1rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 1rem;
  =======
  <<<<<<< HEAD
      padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 1.5rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 1.5rem;
  =======
  <<<<<<< HEAD
      padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 1.5rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 1.5rem;
  =======
      padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 1rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 1rem;
  >>>>>>> 75a893d3ff30d48715c11cf8172818df8a17eddd
  >>>>>>> 7fdd22279b4d9f224716086e671edf3894ed2363
  >>>>>>> de1e306ddf922825af3c5bcea58208a3a37cbd93
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

<{% if section.settings.sticky_header_type != 'none' %}sticky-header data-sticky-type="{{ section.settings.sticky_header_type }}"{% else %}div{% endif %} class="header-wrapper color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}">
  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}
  <header class="header header--{{ section.settings.logo_position }} header--mobile-{{ section.settings.mobile_logo_position }} page-width{% if section.settings.menu_type_desktop == 'drawer' %} drawer-menu{% endif %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if social_links %} header--has-social{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}">
   <div class="header-drawer-and-logo">
  {%- liquid
      if section.settings.menu != blank
        render 'header-drawer'
      endif

      if section.settings.logo_position == 'top-center' or section.settings.menu == blank
        render 'header-search', input_id: 'Search-In-Modal-1'
      endif
    -%}

    {%- if section.settings.logo_position != 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank -%}
              <div class="header__heading-logo-wrapper">
                {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
                {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
                {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
                {{ settings.logo | image_url: width: 600 | image_tag:
                  class: 'header__heading-logo motion-reduce',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
                }}
              </div>
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}
    <div class="c-menu2">
      {% for link in linklists.header_menu_2.links %}
        <a class="header__menu-item list-menu__item link link--text focus-inset" href="{{ link.url }}">{{ link.title }}</a>
       {% endfor %}
       <a class="scrollable_contact_menu_header header__menu-item list-menu__item link link--text focus-inset" href="">Contact</a>
    </div>
    </div>
    {%- liquid
      if section.settings.menu != blank
        if section.settings.menu_type_desktop == 'dropdown'
          render 'header-dropdown-menu'
        elsif section.settings.menu_type_desktop != 'drawer'
          render 'header-mega-menu'
        endif
      endif
    %}

    {%- if section.settings.logo_position == 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank -%}
              <div class="header__heading-logo-wrapper">
                {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
                {% capture sizes %}(min-width: 750px) {{ settings.logo_width }}px, 50vw{% endcapture %}
                {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
                {{ settings.logo | image_url: width: 600 | image_tag:
                  class: 'header__heading-logo',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
                }}
              </div>
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    <div class="header__icons{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header__icons--localization header-localization{% endif %}">
      <div class="desktop-localization-wrapper">
        {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
          <localization-form class="small-hide medium-hide" data-prevent-hide>
            {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderCountryLabel">{{ 'localization.country_label' | t }}</h2>
                {%- render 'country-localization', localPosition: 'HeaderCountry' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {% endif %}

        {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
          <localization-form class="small-hide medium-hide" data-prevent-hide>
            {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderLanguageLabel">{{ 'localization.language_label' | t }}</h2>
                {%- render 'language-localization', localPosition: 'HeaderLanguage' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {%- endif -%}
      </div>
      {% render 'header-search', input_id: 'Search-In-Modal' %}
      <a href="/apps/wishlist" class="header__icon h-wishlist-icon wishlist-page-widget">
      {% comment %} <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" overflow="unset" class="icon">
            <path d="M12.4869 22C12.2364 21.9968 11.9918 21.9232 11.7804 21.7875C8.18822 19.57 5.48518 17.3766 3.2783 14.8705C2.01853 13.5287 1.04215 11.942 0.408559 10.207C-0.730606 6.84675 0.5832 2.9211 3.46882 1.07256C4.78425 0.221399 6.35422 -0.134962 7.90363 0.0659208C9.45304 0.266804 10.8831 1.01212 11.9431 2.17126C12.1376 2.37977 12.3162 2.60031 12.4869 2.81685C12.7194 2.51694 12.97 2.2317 13.2371 1.96275C13.8816 1.32075 14.6473 0.816306 15.4888 0.479444C16.3303 0.142583 17.2302 -0.0198119 18.1351 0.00192686C19.0214 0.0266866 19.8936 0.23235 20.6992 0.606539C21.5048 0.980728 22.2271 1.51571 22.8227 2.17928C25.0693 4.63732 25.6012 7.62065 24.3072 10.8045C23.6255 12.404 22.6611 13.8647 21.4613 15.1151C19.3548 17.3836 16.9713 19.3724 14.3683 21.0336C14.019 21.2662 13.6578 21.4907 13.3006 21.7113L13.1934 21.7795C12.9825 21.9174 12.738 21.9937 12.4869 22Z" stroke="currentColor"></path>
      </svg> {% endcomment %}
      <img src="https://cdn.shopify.com/s/files/1/0661/8336/4792/files/Heart.png?v=1744182187">
      <span class="wishlist-h-count wishlist-total-count" data-total="0">0</span>
      </a>
      {%- if shop.customer_accounts_enabled -%}
        <a
          href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
          class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}"
          rel="nofollow"
        >
          {%- if section.settings.enable_customer_avatar -%}
            <account-icon>
              {%- if customer and customer.has_avatar? -%}
                {{ customer | avatar }}
              {%- else -%}
                <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
              {%- endif -%}
            </account-icon>
          {%- else -%}
            <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
          {%- endif -%}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
          {% if cart == empty %}
            <span class="svg-wrapper">{{'icon-cart-empty.svg' | inline_asset_content }}</span>
          {% else %}
            <span class="svg-wrapper">{{'icon-cart.svg' | inline_asset_content }}</span>
          {% endif %}
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
<script>
document.getElementById('cart-icon-bubble').addEventListener('click', async function(e) {
  e.preventDefault();

  try {
    const response = await fetch('/cart.js');
    const cart = await response.json();

    let totalQuantity = 0;
    let totalValueCents = 0;
    const productNames = [];

    cart.items.forEach(item => {
      totalQuantity += item.quantity;
      totalValueCents += item.price * item.quantity; // price in cents * quantity
      productNames.push(item.product_title);
    });

    const totalValue = totalValueCents / 100; // convert to decimal currency

    // Prepare customer details from global window.customer, safely handle missing fields
    const customer = window.customer || {};
    const defaultAddress = customer.default_address || {};

    const eventData = {
      customer_id: customer.id || '',
      customer_email: customer.email || '',
      customer_name: (customer.first_name || '') + ' ' + (customer.last_name || ''),
      customer_phone: customer.phone || '',
      customer_address: defaultAddress.address1 || '',
      customer_city: defaultAddress.city || '',
      customer_state: defaultAddress.province || '',
      customer_zip: defaultAddress.zip || '',
      customer_country: defaultAddress.country || '',

      item_count: totalQuantity,
      value: totalValue,
      currency: cart.currency || 'INR',

      product_names: productNames.join(', ')
    };

    console.log('GA4 view_cart event data:', eventData);

    // Google Analytics
    gtag('event', 'view_cart', eventData);

    // ✅ Meta Pixel (added)
    if (typeof fbq === 'function') {
      fbq('trackCustom', 'view_cart', {
        customer_id: eventData.customer_id,
        customer_email: eventData.customer_email,
        customer_name: eventData.customer_name,
        customer_phone: eventData.customer_phone,
        customer_address: eventData.customer_address,
        customer_city: eventData.customer_city,
        customer_state: eventData.customer_state,
        customer_zip: eventData.customer_zip,
        customer_country: eventData.customer_country,

        item_count: eventData.item_count,
        value: eventData.value,
        currency: eventData.currency,
        product_names: eventData.product_names
      });

      console.log('Meta Pixel view_cart event fired');
    } else {
      console.warn('fbq not defined – Meta event not fired');
    }

  } catch (error) {
    console.error('Error sending view_cart event:', error);
  }
});
</script>

    </div>
  </header>
  <div class="c-menu3">
    {% for link in linklists.header_menu_3.links %}
      {% if link.links.size > 0 %}
        <div class="dropdown">
          <a class="header__menu-item list-menu__item link link--text focus-inset dropdown-toggle" href="{{ link.url }}">
            {{ link.title }}
            <img src="https://cdn.shopify.com/s/files/1/0661/8336/4792/files/Expand_Arrow_1.png?v=1744182233">
          </a>
          <div class="dropdown-menu">
            {% for sublink in link.links %}
              <a class="dropdown-item" href="{{ sublink.url }}">{{ sublink.title }}</a>
            {% endfor %}
          </div>
        </div>
      {% else %}
        <a class="header__menu-item list-menu__item link link--text focus-inset" href="{{ link.url }}">{{ link.title }}</a>
      {% endif %}
    {% endfor %}
  </div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const menuLinks = document.querySelectorAll('.c-menu3 .dropdown a');

    menuLinks.forEach((link) => {
      link.addEventListener('click', function (e) {
        const collectionName = link.textContent.trim();
        const collectionUrl = link.href;
        const sourceUrl = window.location.href;
        const pageTitle = document.title;

        // Get customer data from global `window.customer`
        const customer = window.customer || {};
        const address = customer.default_address || {};

        const eventData = {
          collection_name: collectionName,
          collection_url: collectionUrl,
          source_url: sourceUrl,
          page_title: pageTitle,
          customer_id: customer.id || null,
          customer_email: customer.email || null,
          customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
          customer_phone: customer.phone || null,
          customer_address: `${address.address1 || ''}, ${address.city || ''}, ${address.province || ''}, ${address.zip || ''}, ${address.country || ''}`.trim(),
        };

        // Send event to GA
        gtag('event', 'view_product_list', eventData);

        // ✅ Send event to Meta Pixel
        if (typeof fbq === 'function') {
          fbq('trackCustom', 'view_product_list', eventData);
        }

        console.log('view_product_list event sent with:', eventData);

        // Optional: add delay for event to register before navigation
        e.preventDefault();
        setTimeout(() => {
          window.location.href = collectionUrl;
        }, 300);
      });
    });
  });
</script>


  {% if template == 'index' %}
  <div class="mobile-search">
    {% render 'header-search', input_id: 'Search-In-Modal' %}
  </div>
  {% endif %}
</{% if section.settings.sticky_header_type != 'none' %}sticky-header{% else %}div{% endif %}>

{%- if settings.cart_type == "notification" -%}
  {%- render 'cart-notification', color_scheme: section.settings.color_scheme, desktop_menu_type: section.settings.menu_type_desktop -%}
{%- endif -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      };

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const headerLinks = document.querySelectorAll('.c-menu2 a');

    headerLinks.forEach((link) => {
      link.addEventListener('click', function (e) {
        const linkText = link.innerText.trim().toLowerCase();

        // Trigger 'try_at_home' event
        if (linkText.includes('try at home')) {
          const redirectUrl = link.href || 'Unknown';
          const sourceUrl = window.location.href;

          // Prevent navigation
          e.preventDefault();

          // Get customer data if available
          const customer = window.customer || {};
          const address = customer.default_address || {};

          gtag('event', 'try_at_home', {
            source: 'Header Menu',
            source_url: sourceUrl,
            redirect_url: redirectUrl,
            customer_id: customer.id || null,
            customer_email: customer.email || null,
            customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
            customer_phone: customer.phone || null,
            customer_address: `${address.address1 || ''}, ${address.city || ''}, ${address.province || ''}, ${address.zip || ''}, ${address.country || ''}`.trim()
          });

          if (typeof fbq === 'function') {
            fbq('trackCustom', 'try_at_home', {
              source: 'Header Menu',
              source_url: sourceUrl,
              redirect_url: redirectUrl,
              customer_id: customer.id || null,
              customer_email: customer.email || null,
              customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
              customer_phone: customer.phone || null,
              customer_address: `${address.address1 || ''}, ${address.city || ''}, ${address.province || ''}, ${address.zip || ''}, ${address.country || ''}`.trim()
            });
          }

          console.log('try_at_home sent (Header Menu):', {
            source: 'Header Menu',
            source_url: sourceUrl,
            redirect_url: redirectUrl,
            customer_id: customer.id,
            customer_email: customer.email,
            customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
            customer_phone: customer.phone,
            customer_address: address
          });
        }

        // Trigger 'shop_all' event for links that contain 'shop all'
        if (linkText.includes('shop all')) {
          const redirectUrl = link.href || 'Unknown';
          const sourceUrl = window.location.href;

          // Prevent navigation
          e.preventDefault();

          // Get customer data if available
          const customer = window.customer || {};
          const address = customer.default_address || {};

          gtag('event', 'shop_all', {
            source: 'Header Menu',  // Set source as 'Header Menu'
            source_url: sourceUrl,
            redirect_url: redirectUrl,
            customer_id: customer.id || null,
            customer_email: customer.email || null,
            customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
            customer_phone: customer.phone || null,
            customer_address: `${address.address1 || ''}, ${address.city || ''}, ${address.province || ''}, ${address.zip || ''}, ${address.country || ''}`.trim()
          });

          if (typeof fbq === 'function') {
            fbq('trackCustom', 'shop_all', {
              source: 'Header Menu',  // Set source as 'Header Menu'
              source_url: sourceUrl,
              redirect_url: redirectUrl,
              customer_id: customer.id || null,
              customer_email: customer.email || null,
              customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
              customer_phone: customer.phone || null,
              customer_address: `${address.address1 || ''}, ${address.city || ''}, ${address.province || ''}, ${address.zip || ''}, ${address.country || ''}`.trim()
            });
          }

          console.log('shop_all event sent (Header Menu):', {
            source: 'Header Menu',
            source_url: sourceUrl,
            redirect_url: redirectUrl,
            customer_id: customer.id,
            customer_email: customer.email,
            customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
            customer_phone: customer.phone,
            customer_address: address
          });

          // Redirect after slight delay
          setTimeout(() => {
            window.location.href = redirectUrl;
          }, 300);
        }

        // Trigger 'about_us' event for links that contain 'about us'
        if (linkText.includes('about us')) {
          const redirectUrl = link.href || 'Unknown';
          const sourceUrl = window.location.href;

          // Prevent navigation
          e.preventDefault();

          // Get customer data if available
          const customer = window.customer || {};
          const address = customer.default_address || {};

          gtag('event', 'about_us', {
            source: 'Header Menu',  // Set source as 'Header Menu'
            source_url: sourceUrl,
            redirect_url: redirectUrl,
            customer_id: customer.id || null,
            customer_email: customer.email || null,
            customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
            customer_phone: customer.phone || null,
            customer_address: `${address.address1 || ''}, ${address.city || ''}, ${address.province || ''}, ${address.zip || ''}, ${address.country || ''}`.trim()
          });

          if (typeof fbq === 'function') {
            fbq('trackCustom', 'about_us', {
              source: 'Header Menu',  // Set source as 'Header Menu'
              source_url: sourceUrl,
              redirect_url: redirectUrl,
              customer_id: customer.id || null,
              customer_email: customer.email || null,
              customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
              customer_phone: customer.phone || null,
              customer_address: `${address.address1 || ''}, ${address.city || ''}, ${address.province || ''}, ${address.zip || ''}, ${address.country || ''}`.trim()
            });
          }

          console.log('about_us event sent (Header Menu):', {
            source: 'Header Menu',
            source_url: sourceUrl,
            redirect_url: redirectUrl,
            customer_id: customer.id,
            customer_email: customer.email,
            customer_name: `${customer.first_name || ''} ${customer.last_name || ''}`.trim(),
            customer_phone: customer.phone,
            customer_address: address
          });

          // Redirect after slight delay
          setTimeout(() => {
            window.location.href = redirectUrl;
          }, 300);
        }
      });
    });
  });
</script>





{% comment %}Show Submenu on hover in header menu 3{% endcomment %}
<script>
  document.addEventListener("DOMContentLoaded", function () {
  const dropdowns = document.querySelectorAll(".c-menu3 .dropdown");

  dropdowns.forEach((dropdown) => {
    const toggle = dropdown.querySelector(".dropdown-toggle");

    // Toggle submenu on click
    toggle.addEventListener("click", function (e) {
      e.preventDefault(); // Prevent link navigation
      dropdown.classList.toggle("active");
    });

    // Close submenu if clicked outside
    document.addEventListener("click", function (e) {
      if (!dropdown.contains(e.target)) {
        dropdown.classList.remove("active");
      }
    });
  });
  document.addEventListener("DOMContentLoaded", function () {
  const dropdowns = document.querySelectorAll(".c-menu3 .dropdown");

  dropdowns.forEach((dropdown) => {
    const toggle = dropdown.querySelector(".dropdown-toggle");

    // Toggle submenu on click
    toggle.addEventListener("click", function (e) {
      const isActive = dropdown.classList.contains("active");

      if (!isActive) {
        e.preventDefault(); // Prevent link navigation if not active (to show dropdown)
      }

      dropdown.classList.toggle("active");

      // If the dropdown is active (meaning the user has clicked the link to show the submenu)
      if (isActive) {
        // Allow the link to navigate after a slight delay (optional)
        setTimeout(() => {
          window.location.href = this.href;
        }, 100);
      }
    });

    // Close submenu if clicked outside
    document.addEventListener("click", function (e) {
      if (!dropdown.contains(e.target)) {
        dropdown.classList.remove("active");
      }
    });
  });
  });

</script>
{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const wishlistIcon = document.querySelector('.h-wishlist-icon');

    if (wishlistIcon) {
      wishlistIcon.addEventListener('click', function () {
        const currentUrl = window.location.href;

        const eventData = {
          event_category: 'Navigation',
          event_label: 'Wishlist Icon',
          source: 'Header Icon',
          current_url: currentUrl,
          customer_email: {{ customer.email | json }},
          customer_id: {{ customer.id | json }},
          customer_first_name: {{ customer.first_name | json }},
          customer_last_name: {{ customer.last_name | json }}
        };

        gtag('event', 'view_wishlist', eventData);

        // ✅ Meta Pixel: send same custom event
        if (typeof fbq === 'function') {
          fbq('trackCustom', 'view_wishlist', eventData);
        }

        console.log('view_wishlist fired:', {
          event_label: 'Wishlist Icon',
          current_url: currentUrl
        });
      });
    }
  });
</script>


{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label",
      "info": "t:sections.header.settings.menu_type_desktop.info"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__3.content",
      "info": "t:sections.header.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__5.content",
      "info": "t:sections.header.settings.header__6.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_language_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__7.content",
      "info": "t:sections.header.settings.header__7.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
